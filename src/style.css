@import "https://unpkg.com/open-props" layer(design.system);
@import "https://unpkg.com/open-props/normalize.min.css" layer(demo.support);
@import "https://unpkg.com/open-props/buttons.min.css" layer(demo.support);

/* demo layer contains all the goodies related to this effect */
@layer demo.color {
  /* type safe angle prop for use with SDA */
  @property --hue {
    syntax: '<angle>';
    initial-value: .5turn;
    inherits: false;
  }

  /* will animate from .5turn (i liked the starting hue better here), 
     to 1.5turn: all full turn */
  @keyframes hue-cycle { to {
    --hue: 1.5turn;
  }}
  
  :root {
    /* dynamic color props, hue powered by scroll */
    /* with oklch, keep lightness (L) ~60% different between surface and text, for contrast */
    --surface-1: oklch(30% 50% var(--hue));
    --surface-2: oklch(40% 40% var(--hue));
    --text-1: oklch(98% 10% var(--hue));
    --text-2: oklch(95% 20% var(--hue));
    --link: oklch(99% 10% var(--hue));
    --focus: oklch(80% 90% var(--hue));
    
    /* fallback for if @property isnt supported */
    --hue: 275;
  }
  
  /* this section uses those dynamic color props on elements */
  :focus-visible {
    outline-color: var(--focus);
  }
  
  .card {
    background: var(--surface-2);
  }

  h1, h2, h3, h4, h5, h6 {
    color: var(--text-1);
  }

  p {
    color: var(--text-2);
  }
  
  button {
    --_bg: var(--surface-2);
    --_border: var(--surface-1);
    --_highlight: color-mix(in oklab, var(--text-2), transparent 75%);
    box-shadow: 0 0 0 var(--_highlight-size) var(--_highlight);
    padding: var(--size-2);
    border-radius: var(--radius-round);
    aspect-ratio: var(--ratio-box);
    transition: box-shadow 145ms var(--ease-4), outline-offset 145ms var(--ease-4);
  }
  
  .pagination > a {
    background: var(--surface-2);
  }
}

@layer demo.scroll-driven-animation {
  html {
    /* be a snap scroller on x */
    scroll-snap-type: x mandatory;
    
    /* prevent overscroll ux */
    overscroll-behavior: contain;
    
    /* animate the --hue prop using the keyframes */
    animation: hue-cycle linear both;
    /* animation progress is the full page scroll range */
    animation-timeline: scroll(inline root);
  }
  
  /* scroll snap sections */
  section {
    scroll-snap-align: start;
  }
  
  /* pagination dots effect */
  /* scaled out, until in view, then scale 1 */
  @keyframes scale { 
    0%, 100% {
      scale: .75;
    }
    50% {
      scale: 1;
      background: var(--text-2);
    }
  }
  
  /* expose the following view timelines for any elements to observe by name */
  body {
    timeline-scope: 
      --section-1, 
      --section-2, 
      --section-3, 
      --section-4, 
      --section-5, 
      --section-6, 
      --section-7
    ;
  }
  
  /* sections observe your inline scroll intersection with the scrollport */
  section {
    view-timeline-axis: inline;
    perspective: 100vw;
  }
  
  /* give each section it's relevant view timeline name */
  /* note: this must match the name exposed on the body timeline-scope */
  #section-1 { view-timeline-name: --section-1 }
  #section-2 { view-timeline-name: --section-2 }
  #section-3 { view-timeline-name: --section-3 }
  #section-4 { view-timeline-name: --section-4 }
  #section-5 { view-timeline-name: --section-5 }
  #section-6 { view-timeline-name: --section-6 }
  #section-7 { view-timeline-name: --section-7 }
  
  .pagination > a {
    /* every dot use the scale animation */
    animation: scale linear both;

    /* power the scale animation by observing a relevant view timeline */
    &:nth-child(1) { animation-timeline: --section-1 }
    &:nth-child(2) { animation-timeline: --section-2 }
    &:nth-child(3) { animation-timeline: --section-3 }
    &:nth-child(4) { animation-timeline: --section-4 }
    &:nth-child(5) { animation-timeline: --section-5 }
    &:nth-child(6) { animation-timeline: --section-6 }
    &:nth-child(7) { animation-timeline: --section-7 }
  }
  
  /* card entry/exit animations */
  @keyframes fancy-in {
    0% {
      transform: rotateY(.25turn) translateX(100px) scale(.9);
      opacity: 0;
    }
    20%, 80% {
      opacity: 1;
      transform: none;
    }
    100% {
      transform: rotateY(-.25turn) translateX(-100px) scale(.9);
      opacity: 0;
    }
  }
  
  .card {
    /* link animation to inline scrolling */
    view-timeline-axis: inline;
    /* for each card, give them a timeline name for observation */
    view-timeline-name: --card;
    /* power each cards animation by their own view timeline / scrollport intersection */
    animation-timeline: --card;
    /* clamp the animation range to cover */
    animation-range: cover;
    
    @media (prefers-reduced-motion: no-preference) {
      animation-name: fancy-in;
    }
  }
  
  /* fade in/out of the next/previous buttons */
  @keyframes toggle-control {
    from { opacity: 0 }
    to   { opacity: 1 }
  }
  
  .controls {
    & > button {
      view-timeline-axis: inline;
      animation-range: exit;
      
      /* if browser supports scroll timelines, enable the visibility toggling animation */
      @supports (animation-timeline: --test) {
        animation-name: toggle-control;
        animation-fill-mode: both;
      }
      
      /* fade out the previous button when section 1 is in view */
      &.previous {
        animation-timeline: --section-1;
      }
      
      /* fade out the next button when at the last section */
      &.next {
        animation-direction: reverse;
        animation-timeline: --section-6;
      }
    }
  }
}

@layer demo.support {
  body {
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: 100vw;
  }
  
  .pagination {
    position: fixed;
    z-index: 1;
    inset-inline: 0;
    inset-block-end: var(--size-5);
    display: flex;
    place-content: center;
    gap: var(--size-3);
    padding: var(--size-3);
    
    & > a {
      display: inline-flex;
      place-content: center;
      inline-size: 2ch;
      flex-shrink: 0;
      aspect-ratio: var(--ratio-square);
      border-radius: var(--radius-round);
      overflow: hidden;
      text-indent: 100vw;
      
      &:is(:hover, :focus-visible) {
        outline: 1px dashed var(--focus);
        outline-offset: 2px;
      }
      
      &:visited {
        background: inherit !important;
      }
    }
  }
  
  .controls {
    position: fixed;
    z-index: 1;
    inset-block-start: calc(50% - var(--size-5) / 2);
    inset-inline: var(--size-3);
    display: flex;
    justify-content: space-between;
  }
  
  section {
    display: grid;
    place-content: center;
    grid-template-columns: repeat(auto-fit, minmax(20ch, min(30ch, 25cqi)));
    gap: var(--size-5);
    padding: var(--size-5);
    
    & > * {
      display: grid;
      grid-row: span 4; 
      grid-template-rows: subgrid; 
      gap: var(--size-2);
    }
  }
  
  .card {
    border: 1px solid transparent;
    padding-block: var(--size-3);
    padding-inline: var(--size-5);
    border-radius: var(--radius-3);
    box-shadow: var(--shadow-2);
    
    & > a {
      white-space: nowrap;
    }
    
    @media (prefers-reduced-motion: no-preference) {
      transition: transform .5s var(--ease-squish-3);
      
      &:is(:hover, :focus-within) {
        transform: translateY(-10px);
      }
    }
  }
  
  article > img {
    opacity: .75;
  }
}